// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DBAppContext))]
    [Migration("20250712101258_ver15")]
    partial class ver15
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Anh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChiTietMonAnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietMonAnId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("anhs");
                });

            modelBuilder.Entity("API.Models.ChiTietCombo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComboId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonAnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("MonAnId");

                    b.ToTable("chiTietCombos");
                });

            modelBuilder.Entity("API.Models.ChiTietGiamGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GiamGiaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonAnId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GiamGiaId");

                    b.HasIndex("MonAnId");

                    b.ToTable("chiTietGiamGias");
                });

            modelBuilder.Entity("API.Models.ChiTietMonAn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DongGoiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<string>("MonAnId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NhaCungCapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<Guid?>("TheLoaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ThuongHieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DongGoiId");

                    b.HasIndex("MonAnId");

                    b.HasIndex("NhaCungCapId");

                    b.HasIndex("TheLoaiId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("chiTietMonAns");
                });

            modelBuilder.Entity("API.Models.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("chucVus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Mota = "Quản trị hệ thống",
                            Ten = "Admin",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Mota = "Nhân viên bán hàng",
                            Ten = "NhanVien",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("API.Models.Combo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid?>("LoaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiId");

                    b.ToTable("combos");
                });

            modelBuilder.Entity("API.Models.DiaChi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiCuThe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NhaCungCapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuanHuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("XaPhuong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("NhaCungCapId");

                    b.ToTable("diaChis");
                });

            modelBuilder.Entity("API.Models.DongGoi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dongGois");
                });

            modelBuilder.Entity("API.Models.GiamGia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ApDungSanPham")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PhanTranKhuyenMai")
                        .HasColumnType("int");

                    b.Property<float?>("SoTienKhuyenMai")
                        .HasColumnType("real");

                    b.Property<float?>("SoTienToiThieu")
                        .HasColumnType("real");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("giamGias");
                });

            modelBuilder.Entity("API.Models.GioHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComboId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhachHangid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonAnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.Property<int>("TongGia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("KhachHangid");

                    b.HasIndex("MonAnId");

                    b.ToTable("gioHangs");
                });

            modelBuilder.Entity("API.Models.HinhThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hinhThucThanhToans");
                });

            modelBuilder.Entity("API.Models.HoaDon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiamGiaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("HinhThucThanhToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KhachHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonAnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("TongTien")
                        .HasColumnType("real");

                    b.Property<float>("TongTienSauKhiGiam")
                        .HasColumnType("real");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GiamGiaId");

                    b.HasIndex("HinhThucThanhToanId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("MonAnId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("API.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComboId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HoaDonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonAnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<float>("ThanhTien")
                        .HasColumnType("real");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("MonAnId");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("API.Models.KhachHang", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("API.Models.Loai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loais");
                });

            modelBuilder.Entity("API.Models.MonAn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("monAns");
                });

            modelBuilder.Entity("API.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("nguoiDungs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            GioiTinh = "Nam",
                            Gmail = "admin@shop.com",
                            Ho = "Nguyễn Văn",
                            NgaySinh = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = "0987654321",
                            Ten = " Quản Trị"
                        });
                });

            modelBuilder.Entity("API.Models.NhaCungCap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("nhaCungCaps");
                });

            modelBuilder.Entity("API.Models.NhanVien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ChucVuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChucVuId");

                    b.HasIndex("NguoiDungId")
                        .IsUnique();

                    b.ToTable("nhanViens");

                    b.HasData(
                        new
                        {
                            Id = "NV01",
                            ChucVuId = new Guid("11111111-1111-1111-1111-111111111111"),
                            NgayVaoLam = new DateTime(2025, 7, 12, 17, 12, 57, 386, DateTimeKind.Local).AddTicks(1881),
                            NguoiDungId = new Guid("99999999-9999-9999-9999-999999999999"),
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("API.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTaoTk")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId")
                        .IsUnique();

                    b.ToTable("taiKhoans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8b522aa-56f0-47af-be84-3220796343d7"),
                            NgayTaoTk = new DateTime(2025, 7, 12, 17, 12, 57, 386, DateTimeKind.Local).AddTicks(1834),
                            NguoiDungId = new Guid("99999999-9999-9999-9999-999999999999"),
                            Password = "admin123",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("API.Models.TheLoai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("theLoais");
                });

            modelBuilder.Entity("API.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("thuongHieus");
                });

            modelBuilder.Entity("API.Models.Anh", b =>
                {
                    b.HasOne("API.Models.ChiTietMonAn", "ChiTietMonAn")
                        .WithMany("Anhs")
                        .HasForeignKey("ChiTietMonAnId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("ChiTietMonAn");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("API.Models.ChiTietCombo", b =>
                {
                    b.HasOne("API.Models.Combo", "Combo")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("ComboId");

                    b.HasOne("API.Models.MonAn", "MonAn")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("MonAnId");

                    b.Navigation("Combo");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("API.Models.ChiTietGiamGia", b =>
                {
                    b.HasOne("API.Models.GiamGia", "GiamGia")
                        .WithMany("chiTietGiamGias")
                        .HasForeignKey("GiamGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.MonAn", "MonAn")
                        .WithMany("ChiTietGiamGias")
                        .HasForeignKey("MonAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiamGia");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("API.Models.ChiTietMonAn", b =>
                {
                    b.HasOne("API.Models.DongGoi", "DongGoi")
                        .WithMany("ChiTietMonAn")
                        .HasForeignKey("DongGoiId");

                    b.HasOne("API.Models.MonAn", "MonAn")
                        .WithMany("ChiTietMonAns")
                        .HasForeignKey("MonAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.NhaCungCap", "NhaCungCap")
                        .WithMany()
                        .HasForeignKey("NhaCungCapId");

                    b.HasOne("API.Models.TheLoai", "TheLoai")
                        .WithMany("ChiTietMonAns")
                        .HasForeignKey("TheLoaiId");

                    b.HasOne("API.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("ChiTietMonAns")
                        .HasForeignKey("ThuongHieuId");

                    b.Navigation("DongGoi");

                    b.Navigation("MonAn");

                    b.Navigation("NhaCungCap");

                    b.Navigation("TheLoai");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("API.Models.Combo", b =>
                {
                    b.HasOne("API.Models.Loai", "Loai")
                        .WithMany("Combos")
                        .HasForeignKey("LoaiId");

                    b.Navigation("Loai");
                });

            modelBuilder.Entity("API.Models.DiaChi", b =>
                {
                    b.HasOne("API.Models.NguoiDung", "NguoiDung")
                        .WithMany("DiaChis")
                        .HasForeignKey("NguoiDungId");

                    b.HasOne("API.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("DiaChis")
                        .HasForeignKey("NhaCungCapId");

                    b.Navigation("NguoiDung");

                    b.Navigation("NhaCungCap");
                });

            modelBuilder.Entity("API.Models.GioHang", b =>
                {
                    b.HasOne("API.Models.Combo", "Combo")
                        .WithMany("GioHangs")
                        .HasForeignKey("ComboId");

                    b.HasOne("API.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("KhachHangid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.MonAn", "MonAn")
                        .WithMany("GioHangs")
                        .HasForeignKey("MonAnId");

                    b.Navigation("Combo");

                    b.Navigation("KhachHang");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("API.Models.HoaDon", b =>
                {
                    b.HasOne("API.Models.GiamGia", "GiamGia")
                        .WithMany("hoaDons")
                        .HasForeignKey("GiamGiaId");

                    b.HasOne("API.Models.HinhThucThanhToan", "HinhThucThanhToan")
                        .WithMany("HoaDon")
                        .HasForeignKey("HinhThucThanhToanId");

                    b.HasOne("API.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangId");

                    b.HasOne("API.Models.MonAn", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("MonAnId");

                    b.HasOne("API.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("NhanVienId");

                    b.Navigation("GiamGia");

                    b.Navigation("HinhThucThanhToan");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("API.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("API.Models.Combo", "Combo")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ComboId");

                    b.HasOne("API.Models.HoaDon", "HoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.MonAn", "MonAn")
                        .WithMany()
                        .HasForeignKey("MonAnId");

                    b.Navigation("Combo");

                    b.Navigation("HoaDon");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("API.Models.KhachHang", b =>
                {
                    b.HasOne("API.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("API.Models.NhanVien", b =>
                {
                    b.HasOne("API.Models.ChucVu", "ChucVu")
                        .WithMany("NhanVien")
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.NguoiDung", "NguoiDung")
                        .WithOne("NhanVien")
                        .HasForeignKey("API.Models.NhanVien", "NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("API.Models.TaiKhoan", b =>
                {
                    b.HasOne("API.Models.NguoiDung", "NguoiDung")
                        .WithOne()
                        .HasForeignKey("API.Models.TaiKhoan", "NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("API.Models.ChiTietMonAn", b =>
                {
                    b.Navigation("Anhs");
                });

            modelBuilder.Entity("API.Models.ChucVu", b =>
                {
                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("API.Models.Combo", b =>
                {
                    b.Navigation("ChiTietCombos");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("API.Models.DongGoi", b =>
                {
                    b.Navigation("ChiTietMonAn");
                });

            modelBuilder.Entity("API.Models.GiamGia", b =>
                {
                    b.Navigation("chiTietGiamGias");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("API.Models.HinhThucThanhToan", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("API.Models.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("API.Models.KhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("API.Models.Loai", b =>
                {
                    b.Navigation("Combos");
                });

            modelBuilder.Entity("API.Models.MonAn", b =>
                {
                    b.Navigation("ChiTietCombos");

                    b.Navigation("ChiTietGiamGias");

                    b.Navigation("ChiTietMonAns");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("API.Models.NguoiDung", b =>
                {
                    b.Navigation("DiaChis");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("API.Models.NhaCungCap", b =>
                {
                    b.Navigation("DiaChis");
                });

            modelBuilder.Entity("API.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("API.Models.TheLoai", b =>
                {
                    b.Navigation("ChiTietMonAns");
                });

            modelBuilder.Entity("API.Models.ThuongHieu", b =>
                {
                    b.Navigation("ChiTietMonAns");
                });
#pragma warning restore 612, 618
        }
    }
}
