@page "/ChiTietSanPham/{MonAnId}"
@using API.Models.DTO
@inject IJSRuntime JSRuntime
@inject IChiTietMonAnService ChiTietMonAn

<link href="css/ChiTietSanPham.css" rel="stylesheet" />
<PageTitle>@(ProductName ?? "Chi tiết sản phẩm") - Jolly</PageTitle>

<main>
    @if (isLoading)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>Đang tải sản phẩm...</p>
        </div>
    }
    else if (ChiTietList?.Any() == true)
    {
        <section class="product-detail">
            <div class="container content-container">
                <div class="container detail-container">
                     
                    <!-- Hình ảnh -->
                    <div class="product-image">
                        @if (!string.IsNullOrEmpty(selectedImage))
                        {
                            <img src="@selectedImage" alt="@ProductName" class="main-image" />
                        }
                        else
                        {
                            <img src="https://via.placeholder.com/500x500.png?text=@Uri.EscapeDataString(ProductName)"
                                 alt="@ProductName" class="main-image" />
                        }
                    </div>

                    @if (displayedImages?.Any() == true)
                    {
                        <div class="thumbnail-list">
                            @foreach (var img in displayedImages)
                            {
                                <img src="@img"
                                     alt="@ProductName"
                                     class="thumbnail @(selectedImage == img ? "active" : "")"
                                     @onclick="() => ChangeImage(img)" />
                            }
                        </div>
                    }


                    <!-- Thông tin -->
                    <div class="product-info">
                        <h2 class="detail-title">@ProductName</h2>

                        <!-- Giá -->
                        <div class="detail-price">
                            @if (selectedChiTiet != null)
                            {
                                if (selectedChiTiet.GiaGiam > 0 && selectedChiTiet.GiaGiam < selectedChiTiet.Gia)
                                {
                                    <span class="original-price">@selectedChiTiet.Gia.ToString("N0")₫</span>
                                    <span class="sale-price">@selectedChiTiet.GiaGiam.ToString("N0")₫</span>
                                }
                                else
                                {
                                    <span>Giá: @selectedChiTiet.Gia.ToString("N0")₫</span>
                                }
                            }
                        </div>

                        <!-- Mô tả -->
                        @if (!string.IsNullOrEmpty(ProductDescription))
                        {
                            <p class="detail-description">@ProductDescription</p>
                        }

                        <!-- Lựa chọn chi tiết -->
                        <div class="detail-options">
                            <label>📂 Hương vị:</label>
                            <select @bind-Value="selectedLoaiVi" @bind-Value:event="onchange">
                                <option value="">-- Chọn hương vị --</option>
                                @foreach (var v in FilteredLoaiVi)
                                {
                                    <option value="@v">@v</option>
                                }
                            </select>


                            <label>📏 Kích cỡ:</label>
                            <select @bind-Value="selectedKichCo" @bind-Value:event="onchange">
                                <option value="">-- Chọn kích cỡ --</option>
                                @foreach (var s in FilteredKichCo)
                                {
                                    <option value="@s">@s</option>
                                }
                            </select>

                            <label>📦 Nguyên Liệu:</label>
                            <select @bind-Value="selectedNguyenLieu" @bind-Value:event="onchange">
                                <option value="">-- Chọn nguyên liệu --</option>
                                @foreach (var p in FilteredNguyenLieu)
                                {
                                    <option value="@p">@p</option>
                                }
                            </select>
                        </div>

                        <!-- Số lượng -->
                        @if (selectedChiTiet != null)
                        {
                            <div class="quantity-selector">
                                <label>Số lượng:</label>
                                <div class="quantity-controls">
                                    <button type="button" @onclick="DecreaseQuantity" disabled="@(selectedQuantity <= 1)">-</button>
                                    <input type="number" @bind="selectedQuantity" min="1" max="@selectedChiTiet.Soluong" />
                                    <button type="button" @onclick="IncreaseQuantity" disabled="@(selectedQuantity >= selectedChiTiet.Soluong)">+</button>
                                </div>
                                <span class="stock-info">(@selectedChiTiet.Soluong có sẵn)</span>
                            </div>

                            <button class="add-to-cart"
                                    @onclick="AddToCart"
                                    disabled="@(!selectedChiTiet.TrangThai || selectedChiTiet.Soluong <= 0)">
                                @if (selectedChiTiet.TrangThai && selectedChiTiet.Soluong > 0)
                                {
                                    <text>🛒 Thêm vào giỏ</text>
                                }
                                else
                                {
                                    <text>❌ Hết hàng</text>
                                }
                            </button>
                        }
                    </div>
                </div>
            </div>
        </section>
    }
    else
    {
        <div class="error-container">
            <h2>❌ Không tìm thấy sản phẩm</h2>
            <p>Sản phẩm bạn đang tìm kiếm không tồn tại hoặc đã bị xóa.</p>
            <a href="/" class="btn-back">🏠 Về trang chủ</a>
        </div>
    }
</main>

@code {
    [Parameter] public string MonAnId { get; set; } = "";

    private List<ChiTietMonAnDTO> ChiTietList = new();
    private ChiTietMonAnDTO? selectedChiTiet;

    private string? _selectedLoaiVi;
    private string? selectedLoaiVi
    {
        get => _selectedLoaiVi;
        set
        {
            if (_selectedLoaiVi != value)
            {
                _selectedLoaiVi = value;
                ApplyFilters();
            }
        }
    }
    private string? _selectedKichCo;
    private string? selectedKichCo
    {
        get => _selectedKichCo;
        set
        {
            if (_selectedKichCo != value)
            {
                _selectedKichCo = value;
                ApplyFilters();
            }
        }
    }

    private string? _selectedNguyenLieu;
    private string? selectedNguyenLieu
    {
        get => _selectedNguyenLieu;
        set
        {
            if (_selectedNguyenLieu != value)
            {
                _selectedNguyenLieu = value;
                ApplyFilters();
            }
        }
    }

    private List<string> FilteredLoaiVi = new();
    private List<string> FilteredKichCo = new();
    private List<string> FilteredNguyenLieu = new();
    private List<string> displayedImages = new();
    private string? selectedImage;


    private string? ProductName;
    private string? ProductDescription;

    private int selectedQuantity = 1;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProduct();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadProduct();
    }

    private async Task LoadProduct()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            await Task.Delay(300);
            var ctma = await ChiTietMonAn.GetChiTiet(MonAnId);
            ChiTietList = ctma.Where(x => x.TrangThai == true).ToList() ?? new();
            if (ChiTietList.Any())
            {
                var first = ChiTietList.First();
                ProductName = first.Ten;
                ProductDescription = first.Mota;

                // lấy danh sách ban đầu
                FilteredLoaiVi = ChiTietList.Select(c => c.LoaiVi).Where(v => !string.IsNullOrEmpty(v)).Distinct().ToList();
                FilteredKichCo = ChiTietList.Select(c => c.KichCo).Where(v => !string.IsNullOrEmpty(v)).Distinct().ToList();
                FilteredNguyenLieu = ChiTietList.Select(c => c.NguyenLieu).Where(v => !string.IsNullOrEmpty(v)).Distinct().ToList();

                // mặc định chọn bản ghi đầu tiên
                selectedLoaiVi = first.LoaiVi;
                selectedKichCo = first.KichCo;
                selectedNguyenLieu = first.NguyenLieu;
                ApplyFilters();
            }
            selectedImage = selectedChiTiet?.DanhSachAnh?.FirstOrDefault()?.DuongDan;

        }
        catch
        {
            ChiTietList = new();
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void OnFilterChanged(ChangeEventArgs e)
    {
        ApplyFilters();
    }

    private void ApplyFilters()
    {
        var filtered = ChiTietList.AsEnumerable();

        if (!string.IsNullOrEmpty(selectedLoaiVi))
            filtered = filtered.Where(c => c.LoaiVi == selectedLoaiVi);

        if (!string.IsNullOrEmpty(selectedKichCo))
            filtered = filtered.Where(c => c.KichCo == selectedKichCo);

        if (!string.IsNullOrEmpty(selectedNguyenLieu))
            filtered = filtered.Where(c => c.NguyenLieu == selectedNguyenLieu);

        // cập nhật lại danh sách hợp lệ
        FilteredLoaiVi = ChiTietList
            .Where(c => (string.IsNullOrEmpty(selectedKichCo) || c.KichCo == selectedKichCo)
                     && (string.IsNullOrEmpty(selectedNguyenLieu) || c.NguyenLieu == selectedNguyenLieu))
            .Select(c => c.LoaiVi)
            .Where(v => !string.IsNullOrEmpty(v))
            .Distinct()
            .ToList();

        FilteredKichCo = ChiTietList
            .Where(c => (string.IsNullOrEmpty(selectedLoaiVi) || c.LoaiVi == selectedLoaiVi)
                     && (string.IsNullOrEmpty(selectedNguyenLieu) || c.NguyenLieu == selectedNguyenLieu))
            .Select(c => c.KichCo)
            .Where(v => !string.IsNullOrEmpty(v))
            .Distinct()
            .ToList();

        FilteredNguyenLieu = ChiTietList
            .Where(c => (string.IsNullOrEmpty(selectedLoaiVi) || c.LoaiVi == selectedLoaiVi)
                     && (string.IsNullOrEmpty(selectedKichCo) || c.KichCo == selectedKichCo))
            .Select(c => c.NguyenLieu)
            .Where(v => !string.IsNullOrEmpty(v))
            .Distinct()
            .ToList();

        // nếu chọn đủ 3 thì lấy đúng chi tiết
        // Nếu chọn đủ 3 thuộc tính -> ảnh của đúng chi tiết
        if (!string.IsNullOrEmpty(selectedLoaiVi) &&
            !string.IsNullOrEmpty(selectedKichCo) &&
            !string.IsNullOrEmpty(selectedNguyenLieu))
        {
            selectedChiTiet = ChiTietList.FirstOrDefault(c =>
                c.LoaiVi == selectedLoaiVi &&
                c.KichCo == selectedKichCo &&
                c.NguyenLieu == selectedNguyenLieu
            );

            displayedImages = selectedChiTiet?.DanhSachAnh?.Select(a => a.DuongDan).ToList() ?? new();
        }
        else
        {
            selectedChiTiet = null;

            // Lấy các chi tiết khớp với bộ lọc hiện tại
            var filtered1 = ChiTietList.AsEnumerable();

            if (!string.IsNullOrEmpty(selectedLoaiVi))
                filtered1 = filtered1.Where(c => c.LoaiVi == selectedLoaiVi);

            if (!string.IsNullOrEmpty(selectedKichCo))
                filtered1 = filtered1.Where(c => c.KichCo == selectedKichCo);

            if (!string.IsNullOrEmpty(selectedNguyenLieu))
                filtered1 = filtered1.Where(c => c.NguyenLieu == selectedNguyenLieu);

            // gom tất cả ảnh của các chi tiết phù hợp
            displayedImages = filtered1
                .SelectMany(c => c.DanhSachAnh ?? new List<AnhDTO>())
                .Select(a => a.DuongDan)
                .Distinct()
                .ToList();
        }

        // Ảnh chính = ảnh đầu tiên
        selectedImage = displayedImages.FirstOrDefault();
        selectedQuantity = 1;

    }

    private void IncreaseQuantity()
    {
        if (selectedChiTiet != null && selectedQuantity < selectedChiTiet.Soluong)
        {
            selectedQuantity++;
        }
    }

    private void DecreaseQuantity()
    {
        if (selectedQuantity > 1)
        {
            selectedQuantity--;
        }
    }

    private async Task AddToCart()
    {
        if (selectedChiTiet == null) return;

        try
        {
            await JSRuntime.InvokeVoidAsync("alert",
                $"Đã thêm {selectedQuantity} {ProductName} ({selectedChiTiet.LoaiVi} {selectedChiTiet.KichCo} {selectedChiTiet.NguyenLieu}) vào giỏ hàng!");
        }
        catch
        {
            await JSRuntime.InvokeVoidAsync("alert", "Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng!");
        }
    }
    private void ChangeImage(string duongDan)
    {
        selectedImage = duongDan;
    }

}
