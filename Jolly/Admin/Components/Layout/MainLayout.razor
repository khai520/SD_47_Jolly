@using System.Security.Claims
@using API.Models.DTO
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inherits LayoutComponentBase
@inject ProtectedLocalStorage localStorage
@inject AppStateService AppState
@inject IJSRuntime JS


@{
    if (AppState.CurrentRole == "Admin")
    {
        <LayoutView Layout="@typeof(Layout.AdminLayout)">
            @Body
        </LayoutView>
    }
    else if (AppState.CurrentRole == "NhanVien")
    {
        <LayoutView Layout="@typeof(Layout.NhanVienLayout)">
            @Body
        </LayoutView>
    }
    else
    {
        <div>Bạn không có quyền truy cập trang này</div>
        <div style="display:none; visibility:hidden">@Body</div>
    }
}

@code {
    private bool _hasInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasInitialized)
        {
            _hasInitialized = true;

            // Đọc từ localStorage
            
            var role = await JS.InvokeAsync<string>("localStorage.getItem", "currentRole");
            var username = await JS.InvokeAsync<string>("localStorage.getItem", "currentUserName");

            AppState.CurrentRole = role ?? "";
            AppState.CurrentUserName = username ?? "";
            Console.WriteLine(role);
            StateHasChanged(); 
        }
    }
}