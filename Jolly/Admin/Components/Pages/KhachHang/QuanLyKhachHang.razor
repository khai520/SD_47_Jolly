@page "/quanlykhachhang"
@using API.Models.DTO
@using AutoMapper
@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JS
@inject IKhachHangService khachHangService
@inject IApiService apiService
@inject IMapper _mapper

<link href="css/QuanLyKhachHang.css" rel="stylesheet" />
<PageTitle>Quản lý khách hàng</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-primary">
                    <i class="fas fa-users me-2"></i>
                    Quản lý khách hàng
                </h2>
                <button class="btn btn-primary" @onclick="OpenAddModal">
                    <i class="fas fa-plus me-2"></i>
                    Thêm khách hàng
                </button>
            </div>
        </div>
    </div>

    <!-- Thanh tìm kiếm và lọc -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <span class="input-group-text">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                    </svg>
                </span>
                <input type="text" class="form-control" placeholder="Tìm kiếm theo tên, SĐT, email..."
                       @bind="searchTerm" @oninput="OnSearchChanged">
            </div>
        </div>
        <div class="col-md-3">
            <select class="form-select" @bind="StatusFilter">
                <option value="">Tất cả trạng thái</option>
                <option value="true">Hoạt động</option>
                <option value="false">Không hoạt động</option>
            </select>
        </div>
        <div class="col-md-3">
            <button class="btn btn-outline-secondary w-100" @onclick="ResetFilter">
                <i class="fas fa-refresh me-2"></i>
                Đặt lại
            </button>
        </div>
    </div>

    <!-- Bảng danh sách khách hàng -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>STT</th>
                            <th>Họ tên</th>
                            <th>Ngày sinh</th>
                            <th>Số điện thoại</th>
                            <th>Email</th>
                            <th>Trạng thái</th>
                            <th>Ghi chú</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (filteredKhachHangs.Any())
                        {
                            @foreach (var (khachHang, index) in filteredKhachHangs.Select((kh, i) => (kh, i)))
                            {
                                <tr>
                                    <td>@(index + 1)</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-2">
                                                @khachHang.Ho?.FirstOrDefault()@khachHang.Ten?.FirstOrDefault()
                                            </div>
                                            <strong>@khachHang.HoTen</strong>
                                        </div>
                                    </td>
                                    <td>
                                        @khachHang.NgaySinh.ToString("dd/MM/yyyy")
                                    </td>
                                    <td>
                                        <i class="fas fa-phone text-muted me-2"></i>
                                        @khachHang.Sdt
                                    </td>
                                    <td>
                                        <i class="fas fa-envelope text-muted me-2"></i>
                                        @khachHang.Gmail
                                    </td>
                                    <td>
                                        @if (khachHang.TrangThai)
                                        {
                                            <span class="badge bg-success">Hoạt động</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Không hoạt động</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="text-muted">@(khachHang.GhiChu ?? "Không có")</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-sm btn-outline-primary" @onclick="() => OpenEditModal(khachHang)">
                                                <i class="fas fa-edit"></i>
                                                Sửa
                                            </button>
                                            <button class="btn btn-sm btn-outline-info" @onclick="() => ViewDetail(khachHang)">
                                                <i class="fas fa-eye"></i>
                                                Xem
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger" @onclick="() => DoiTrangThai(khachHang)">
                                                <i class="fas fa-trash"></i>
                                                Đổi trạng thái
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center text-muted py-4">
                                    <i class="fas fa-user-slash fa-2x mb-2"></i>
                                    <div>Không tìm thấy khách hàng nào</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Phân trang -->
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div class="text-muted">
            Hiển thị @Math.Min(currentPage * pageSize, filteredKhachHangs.Count) / @filteredKhachHangs.Count khách hàng
        </div>
        <nav>
            <ul class="pagination pagination-sm">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <button class="page-link" @onclick="() => ChangePage(currentPage - 1)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8" />
                        </svg>
                    </button>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <button class="page-link" @onclick="() => ChangePage(i)">@i</button>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <button class="page-link" @onclick="() => ChangePage(currentPage + 1)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8" />
                        </svg>
                    </button>
                </li>
            </ul>
        </nav>
    </div>
</div>
<ThemSuaKhachHang 
    isEdit ="@isEdit"
    showModal = "@showModal"
    OnClose="CloseModal"
    khach="selectedKhachHang"
    OnLoad="LoadData"
    />

@if (showDetailModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-user me-2"></i>Chi tiết khách hàng
                    </h5>
                    <button type="button" class="btn-close" @onclick="CloseDetailModal"></button>
                </div>
                <div class="modal-body">
                    @if (selectedKhachHang != null)
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Họ tên:</label>
                                    <p class="form-control-plaintext">@selectedKhachHang.HoTen</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Ngày sinh:</label>
                                    <p class="form-control-plaintext">@selectedKhachHang.NgaySinh</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Số điện thoại:</label>
                                    <p class="form-control-plaintext">@selectedKhachHang.Sdt</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Email:</label>
                                    <p class="form-control-plaintext">@selectedKhachHang.Gmail</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Trạng thái:</label>
                                    <p class="form-control-plaintext">
                                        @if (selectedKhachHang.TrangThai)
                                        {
                                            <span class="badge bg-success">Hoạt động</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Không hoạt động</span>
                                        }
                                    </p>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Ghi chú:</label>
                                    <p class="form-control-plaintext">@(selectedKhachHang.GhiChu ?? "Không có ghi chú")</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDetailModal">
                        <i class="fas fa-times me-2"></i>Đóng
                    </button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    private List<KhachHangDTO> khachHangs = new();
    private List<KhachHangDTO> filteredKhachHangs = new();

    private KhachHangDTO selectedKhachHang = new();
    private bool showModal { get; set; } = false;
    private bool isEdit { get; set; } = false;

    private bool showDetailModal = false;

    private string searchTerm = "";
    private string statusFilter = "";
    private string StatusFilter
    {
        get => statusFilter;
        set
        {
            statusFilter = value;
            Console.WriteLine(statusFilter);
            ApplyFilter();
        }
    }

    private int currentPage = 1;
    private int pageSize = 10;
    private int totalPages => (int)Math.Ceiling(filteredKhachHangs.Count / (double)pageSize);

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        khachHangs = await khachHangService.GetAll();

        ApplyFilter();
    }

    private void ApplyFilter()
    {
        var filtered = khachHangs
            .Where(nv =>
                (string.IsNullOrEmpty(searchTerm) ||
                 (nv.HoTen ?? "").Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                 (nv.Sdt ?? "").Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                 (nv.Gmail ?? "").Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) &&
                (string.IsNullOrEmpty(statusFilter) ||
                 (statusFilter == "true" && nv.TrangThai) ||
                 (statusFilter == "false" && !nv.TrangThai))
            ).ToList();

        var newTotalPages = (int)Math.Ceiling(filtered.Count / (double)pageSize);
        if (currentPage > newTotalPages)
            currentPage = 1;

        filteredKhachHangs = filtered
            .Skip((currentPage - 1) * pageSize)
            .Take(pageSize)
            .ToList();
    }


    private void OnSearchChanged(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? "";
        currentPage = 1;
        ApplyFilter();
    }


    private void ResetFilter()
    {
        searchTerm = "";
        statusFilter = "";
        ApplyFilter();
    }

    private void ChangePage(int page)
    {
        if (page >= 1 && page <= totalPages)
        {
            currentPage = page;
        }
    }

    private void OpenAddModal()
    {
        isEdit = false;
        showModal = true;
    }

    private void OpenEditModal(KhachHangDTO kh)
    {
        selectedKhachHang = kh;
        isEdit = true;
        showModal = true;
    }

    private void CloseModal()
    {
        selectedKhachHang = new();
        showModal = false;
    }

    private void ViewDetail(KhachHangDTO khachHang)
    {
        selectedKhachHang = khachHang;
        showDetailModal = true;
    }

    private void CloseDetailModal()
    {
        showDetailModal = false;
        selectedKhachHang = new();
    }



    private async Task DoiTrangThai(KhachHangDTO khachHang)
    {
        try
        {
            var result = await JS.InvokeAsync<SwalResult>("Swal.fire", new
            {
                title = "Xác nhận đổi trạng thái",
                text = "Bạn có chắc muốn đổi trạng thái khách hàng này?",
                icon = "question",
                showCancelButton = true,
                confirmButtonText = "Xác nhận",
                cancelButtonText = "Huỷ"
            });

            if (result.IsConfirmed)
            {
                khachHang.TrangThai = !khachHang.TrangThai;
                var response = await apiService.PutAsync<KhachHang>("KhachHang", _mapper.Map<KhachHang>(khachHang));

                if (response)
                {
                
                    var original = khachHangs.FirstOrDefault(n => n.Id == khachHang.Id);
                    if (original != null)
                    {
                        original.TrangThai = khachHang.TrangThai;
                    }

                    ApplyFilter(); 

                    await JS.InvokeVoidAsync("Swal.fire", new
                    {
                        icon = "success",
                        title = "Thành công",
                        text = "Đổi trạng thái khách hàng thành công."
                    });
                }
                else
                {
                    await JS.InvokeVoidAsync("Swal.fire", new
                    {
                        icon = "error",
                        title = "Thất bại",
                        text = "Có lỗi khi đổi trạng thái khách hàng."
                    });
                }
            }
            else
            {
                await JS.InvokeVoidAsync("Swal.fire", new
                {
                    icon = "info",
                    title = "Đã huỷ",
                    text = "Không có thay đổi nào được thực hiện."
                });
            }
        }
        catch (Exception)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "warning",
                title = $"Lỗi hệ thống!",
                text = $"Hhách hàng không tồn tại",
                confirmButtonText = "OK"
            });
            throw;
        }
    }

}